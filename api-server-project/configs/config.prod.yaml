# Production Configuration
app:
  name: "Go API Server - PROD"
  version: "1.0.0"
  env: "production"
  debug: false

server:
  host: "0.0.0.0"
  port: 80
  read_timeout: "10s"
  write_timeout: "10s"
  idle_timeout: "30s"

database:
  driver: "postgres"
  host: "prod-db.amazonaws.com"
  port: 5432
  user: "prod_user"
  password: "${DB_PASSWORD}"
  dbname: "prod_database"
  sslmode: "require"
  max_open_conns: 25
  max_idle_conns: 10
  conn_max_lifetime: "5m"

# redis:
#   host: "prod-redis.amazonaws.com"
#   port: 6379
#   password: "${REDIS_PASSWORD}"
#   db: 0
#   pool_size: 20

# jwt:
#   secret: "${JWT_SECRET}"
#   expiry: "2h"
#   refresh_expiry: "24h"

# logging:
#   level: "warn"
#   format: "json"
#   output: "file"
#   file_path: "/var/log/app.log"

cors:
  allowed_origins:
    - "https://yourapp.com"
    - "https://www.yourapp.com"
    - "https://api.yourapp.com"
  allowed_methods:
    - "GET"
    - "POST"
    - "PUT"
    - "DELETE"
    - "OPTIONS"
  allowed_headers:
    - "Authorization"
    - "Content-Type"
    - "X-Requested-With"

# email:
#   smtp_host: "smtp.sendgrid.net"
#   smtp_port: 587
#   username: "${EMAIL_USER}"
#   password: "${EMAIL_PASSWORD}"
#   from: "noreply@yourapp.com"

# storage:
#   type: "s3"
#   s3_bucket: "yourapp-prod-uploads"
#   s3_region: "us-east-1"
#   max_file_size: "10MB"

rate_limit:
  enabled: true
  requests_per_minute: 100
  burst: 20

pagination:
  default_page_size: 20
  max_page_size: 100

# Security settings
security:
  max_request_size: "1MB"
  timeout: "30s"
  
# Monitoring
monitoring:
  enabled: true
  metrics_port: 9090